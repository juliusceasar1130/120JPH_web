# 最后修改时间->2025-08-11 16:40
# 作者：Docker部署配置
# 功能：Vue3项目Nginx生产环境配置

# ===============================
# 全局配置
# ===============================
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /run/nginx/nginx.pid;

# ===============================
# 事件模块配置
# ===============================
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# ===============================
# HTTP模块配置
# ===============================
http {
    # MIME类型配置
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式定义
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '"$request_time" "$upstream_response_time"';

    # 访问日志配置
    access_log /var/log/nginx/access.log main;

    # ===============================
    # 性能优化配置
    # ===============================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    client_body_buffer_size 128k;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;

    # 隐藏Nginx版本信息
    server_tokens off;

    # ===============================
    # Gzip压缩配置
    # ===============================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/x-component
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject;

    # ===============================
    # 缓存配置
    # ===============================
    # 设置临时文件路径
    client_body_temp_path /var/cache/nginx/client_temp;
    proxy_temp_path /var/cache/nginx/proxy_temp;
    fastcgi_temp_path /var/cache/nginx/fastcgi_temp;
    uwsgi_temp_path /var/cache/nginx/uwsgi_temp;
    scgi_temp_path /var/cache/nginx/scgi_temp;

    # ===============================
    # 主服务器配置
    # ===============================
    server {
        listen 80;
        server_name localhost;
        
        # 网站根目录
        root /usr/share/nginx/html;
        index index.html index.htm;

        # 字符集
        charset utf-8;

        # ===============================
        # 安全头配置
        # ===============================
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;

        # ===============================
        # 静态资源缓存策略
        # ===============================
        
        # JavaScript和CSS文件 - 长期缓存
        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            access_log off;
        }

        # 图片文件 - 长期缓存
        location ~* \.(png|jpg|jpeg|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # 字体文件 - 长期缓存
        location ~* \.(eot|ttf|woff|woff2|otf)$ {
            expires 1y;
            add_header Cache-Control "public";
            add_header Access-Control-Allow-Origin "*";
            access_log off;
        }

        # HTML文件 - 不缓存，确保及时更新
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }

        # Manifest文件和Service Worker - 不缓存
        location ~* \.(manifest\.json|sw\.js)$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }

        # ===============================
        # Vue Router 历史模式支持
        # ===============================
        location / {
            try_files $uri $uri/ /index.html;
            
            # 为API路径添加特殊处理（如果前端路由包含/api）
            location ~ ^/api {
                try_files $uri $uri/ @fallback;
            }
        }

        # API fallback处理
        location @fallback {
            return 404;
        }

        # ===============================
        # 特殊文件处理
        # ===============================
        
        # 禁止访问隐藏文件和敏感文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 禁止访问备份文件
        location ~* \.(bak|backup|old|orig|original|test|tmp)$ {
            deny all;
            access_log off;
        }

        # ===============================
        # 健康检查和监控
        # ===============================
        
        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx状态监控（可选，生产环境建议移除或限制访问）
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

        # ===============================
        # 错误页面配置
        # ===============================
        
        # 404错误返回index.html（支持Vue Router）
        error_page 404 /index.html;
        
        # 50x错误页面
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        # ===============================
        # 日志配置
        # ===============================
        
        # 对某些文件不记录访问日志
        location ~* \.(ico|css|js|gif|jpe?g|png|svg|woff2?|ttf|eot)$ {
            access_log off;
            log_not_found off;
        }
    }

    # ===============================
    # 附加配置
    # ===============================
    
    # 如果需要HTTPS，可以在这里添加SSL服务器配置
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     
    #     ssl_certificate /path/to/certificate.crt;
    #     ssl_certificate_key /path/to/private.key;
    #     
    #     # SSL配置
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # 其他配置与HTTP服务器相同...
    # }
}